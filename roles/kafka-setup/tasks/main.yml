- name: Install Kafka package
  get_url:
    url: "{{ kafka_package_url }}"
    dest: "{{ kafka_pacakge_tmp }}"

- name: Create Kafka User
  user: 
    name: "{{ kafka_user }}"

- name: Create Kafka data directory
  file: 
    path : "{{ kafka_data }}"
    owner: "{{ kafka_user }}"
    state: directory
    mode: "0700"
  
- name: Extract Kafka package
  unarchive:
    src: "{{ kafka_pacakge_tmp }}"
    dest: "{{ kafka_install_dest }}"

- name: Change kafka broker_id prop server.properties
  lineinfile:
    path: "{{ kafka_install_dest }}/{{ kafka_dir_name }}/config/server.properties"
    regex: 'broker.id=0'
    line: "broker.id={{ hostvars[inventory_hostname]['kafka_id']}}"

- name: Change kafka zookeeper prop server.properties
  lineinfile:
    path: "{{ kafka_install_dest }}/{{ kafka_dir_name }}/config/server.properties"
    regex: 'zookeeper.connect=localhost:2181'
    line: "zookeeper.connect={{ zookeeper_connection_string }}"

- name: Change kafka data dir prop server.properties
  lineinfile:
    path: "{{ kafka_install_dest }}/{{ kafka_dir_name }}/config/server.properties"
    regex: '/tmp/kafka-logs'
    line: "log.dirs={{ kafka_data }}"

- name: Change kafka Advertised listener prop server.properties
  lineinfile:
    path: "{{ kafka_install_dest }}/{{ kafka_dir_name }}/config/server.properties"
    regex: 'advertised.listeners=PLAINTEXT://your.host.name:9092'
    line: "advertised.listeners=PLAINTEXT://{{ inventory_hostname }}:9092"
